
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARGS ASIGNAR CADENA CLASS COMA COMDOB COMILLA_SIMPLE COMMENT CONSOLE CORDER CORIZQ DISTINTO DIV ENTERO IDENTIFICADOR LLADER LLAIZQ MAIN MAYORDER MAYORIGUAL MAYORIZQ MAYORQUE MENORIGUAL MENORQUE MINUSMINUS MODULO MULT NAMESPACE NUMERAL PARDER PARIZQ PLUSPLUS PUNTO PUNTOCOMA RESTA STATIC STRING SUMA SYSTEM USING VOID WRITELINEprogram : using_statement namespace_definitionnamespace_definition : NAMESPACE IDENTIFICADOR LLAIZQ class_definition LLADERusing_statement : USING SYSTEM PUNTOCOMAstatement : print_statementclass_definition : CLASS IDENTIFICADOR LLAIZQ main_method LLADERmain_method : STATIC VOID MAIN PARIZQ STRING CORIZQ CORDER ARGS PARDER LLAIZQ statement LLADERprint_statement : SYSTEM PUNTO CONSOLE PUNTO WRITELINE PARIZQ CADENA PARDER PUNTOCOMA'
    
_lr_action_items = {'USING':([0,],[3,]),'$end':([1,4,12,],[0,-1,-2,]),'NAMESPACE':([2,8,],[5,-3,]),'SYSTEM':([3,26,],[6,29,]),'IDENTIFICADOR':([5,11,],[7,13,]),'PUNTOCOMA':([6,37,],[8,38,]),'LLAIZQ':([7,13,25,],[9,14,26,]),'CLASS':([9,],[11,]),'LLADER':([10,15,17,27,28,30,38,],[12,17,-5,30,-4,-6,-7,]),'STATIC':([14,],[16,]),'VOID':([16,],[18,]),'MAIN':([18,],[19,]),'PARIZQ':([19,34,],[20,35,]),'STRING':([20,],[21,]),'CORIZQ':([21,],[22,]),'CORDER':([22,],[23,]),'ARGS':([23,],[24,]),'PARDER':([24,36,],[25,37,]),'PUNTO':([29,32,],[31,33,]),'CONSOLE':([31,],[32,]),'WRITELINE':([33,],[34,]),'CADENA':([35,],[36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'using_statement':([0,],[2,]),'namespace_definition':([2,],[4,]),'class_definition':([9,],[10,]),'main_method':([14,],[15,]),'statement':([26,],[27,]),'print_statement':([26,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> using_statement namespace_definition','program',2,'p_program','analizador_sintactico.py',9),
  ('namespace_definition -> NAMESPACE IDENTIFICADOR LLAIZQ class_definition LLADER','namespace_definition',5,'p_namespace_definition','analizador_sintactico.py',13),
  ('using_statement -> USING SYSTEM PUNTOCOMA','using_statement',3,'p_using_statement','analizador_sintactico.py',17),
  ('statement -> print_statement','statement',1,'p_statement','analizador_sintactico.py',21),
  ('class_definition -> CLASS IDENTIFICADOR LLAIZQ main_method LLADER','class_definition',5,'p_class_definition','analizador_sintactico.py',25),
  ('main_method -> STATIC VOID MAIN PARIZQ STRING CORIZQ CORDER ARGS PARDER LLAIZQ statement LLADER','main_method',12,'p_main_method','analizador_sintactico.py',29),
  ('print_statement -> SYSTEM PUNTO CONSOLE PUNTO WRITELINE PARIZQ CADENA PARDER PUNTOCOMA','print_statement',9,'p_print_statement','analizador_sintactico.py',35),
]
